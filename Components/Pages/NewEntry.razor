@page "/newentry"
@attribute [StreamRendering]

<PageTitle>New Entry</PageTitle>

<h1 style="color: #eb3a9b; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-weight: bold; padding-top: 10px; text-align: left;">Add New Entry</h1>

<div style="display: grid; grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr; gap: 10px; align-items: center; width: 100%; box-sizing: border-box; margin-top: 20px;">
  <!-- Column Titles -->
  <h3 style="margin: 0; text-align: center; color: #eb3a9b;">Flowers</h3>
  <h3 style="margin: 0; text-align: center; color: #eb3a9b;">Units</h3>
  <h3 style="margin: 0; text-align: center; color: #eb3a9b;">Cost</h3>
  <h5 style="margin: 0; text-align: center; color: #eb3a9b;">Date</h5>
  <h5 style="margin: 0; text-align: center; color: #eb3a9b;">Stem Cost</h5>
  <h5 style="margin: 0; text-align: center; color: #eb3a9b;">Change Since Last Entry</h5>

  <!-- Entry Rows -->
  <!-- Row 1 -->

  <select>
     @foreach (var flower in @getFlowerOptions())
        {
            <option value="@flower">@flower</option>
        }
  </select>
  <input type="number" placeholder="Units" style="width: 70%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
  <input type="number" placeholder="Cost" style="width: 70%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
  <input type="date" style="width: 80%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
  <h6 style="text-align: center; color: #eb3a9b; margin: 0;">0.43</h6>
  <h6 style="text-align: center; color: #eb3a9b; margin: 0;">3%</h6>

  <!-- Row 2 -->
  <select style="width: 90%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
    <option>Carolina Sapphire</option>
    <option>Veronica</option>
    <option>More</option>
  </select>
  <input type="number" placeholder="Units" style="width: 70%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
  <input type="number" placeholder="Cost" style="width: 70%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
  <input type="date" style="width: 80%; padding: 5px; border: 1px solid #eb3a9b; border-radius: 5px;">
  <h6 style="text-align: center; color: #eb3a9b; margin: 0;">4.83</h6>
  <h6 style="text-align: center; color: #eb3a9b; margin: 0;">12%</h6>
</div>

<!-- New Line Button -->
<div style="margin-left: 100px; text-align: left;">
  <button style="background-color: #eb3a9b; color: white; padding: 10px 20px; border: none; border-radius: 5px; font-size: 16px; margin-left: 10px;">New Line</button>
</div>

<!-- Save Button -->

<div style="margin-top: 20px; text-align: left;">
  <button style="background-color: #eb3a9b; color: white; padding: 10px 20px; border: none; border-radius: 5px; font-size: 16px;">Save</button>
</div>


@code{
   public string ReadTxt()
    {
         List<string[]> csvData2 = new List<string[]>();
        //change this as needed
        string filePath = "C:\\Users\\efren\\OneDrive\\Desktop\\FlowerProjectData.txt";


        using (StreamReader reader = new StreamReader(filePath)){
                string line;
                while ((line = reader.ReadLine()) != null){
                    string[] fields = line.Split(',');
                    csvData2.Add(fields);
                }
            }

        foreach (var row in csvData2)
        {
            return string.Join(",", row) + "\n";
        }
        return "";
    }

 public List<string> GetAllFlowers(string data)//works
    {

        int startIndex2 = data.IndexOf("<Flower>");
        int endIndex2 = data.IndexOf("</Flower>") + "</Flower>".Length; // End after </Object>
        string usingData = data;
        
    
        usingData = data.Substring(startIndex2, endIndex2 - startIndex2);

        List<string> flowerNames = new List<string>();
        int startIndex = 0;
        
        while ((startIndex = usingData.IndexOf("<", startIndex)) != -1)
        {
            int endIndex = usingData.IndexOf(">", startIndex);
            if (endIndex == -1) break;

            string tag = usingData.Substring(startIndex + 1, endIndex - startIndex - 1);
            
            if (!tag.Contains("/") && !tag.Contains("Price") && !tag.Contains("Amount") && !tag.Contains("Purchases") && !tag.Contains("Purchase") && !tag.Contains("Date")&& !tag.Contains("Type") && !tag.Contains("Flower"))
            {
                flowerNames.Add(tag);
            }
            startIndex = endIndex + 1;
        }

        return flowerNames;
    }
    public string[] getFlowerOptions(){
        return GetAllFlowers(ReadTxt()).ToArray();
        
    }
}
