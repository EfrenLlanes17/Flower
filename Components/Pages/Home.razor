@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

@* 

Keeping this here incase the file upload doesnt work again

<div class="m-4">
    <input type="file" @oninput="HandleInput"/>
    <p>@text</p>
</div>
@code{
    string text = "";
    private void HandleInput(ChangeEventArgs e){
        text = (string)e.Value;
    }
} *@

<h1>Upload File</h1>

<h6>Get insights on your price changes</h6>

<div class="custom-file-upload">
    <label for="fileInput">UPLOAD</label>
    <input id="fileInput" type="file" class="hidden-file-input" onchange="FileUploaded()" />
</div>


@*<p role="status">File Name: @fileContent</p>*@

@code {
    public string fileContent { get; set;} = "";

    public async Task FileUploaded(InputFileChangeEventArgs e)
    {
         // Get the selected file
        @* var file = e.File;

        // Optional: Check file type or size
        if (file.ContentType != "text/plain")
        {
            fileContent = "Only text files are supported.";
            StateHasChanged();
            return;
        }

        // Read the file's content
        using var reader = new StreamReader(file.OpenReadStream());
        fileContent = await reader.ReadToEndAsync(); *@
        
        var browserFile = e.File;
        if(browserFile != null){
            fileContent = browserFile.Name;
            StateHasChanged();
        }

        
    }
} 




